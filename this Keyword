this pointer holds the address of the current object. In simple words, you can say that this pointer points to the current object of the class. 
There can be three main usages of this keyword in C++.
It can be used to refer to a current class instance variable.
It can be used to pass the current object as a parameter to another method.
It can be used to declare indexers.



#include <iostream>
class Hero {
public:
    int health;
    Hero(int health) {
        // std::cout << "Address of current object: " << this << std::endl;
        this->health = health; // 'this->health' refers to the object's health, 'health' refers to the parameter
    }
};

int main() {
    Hero ramesh(100);
    // std::cout << "Address of ramesh: " << &ramesh << std::endl;
    // You'd see that 'this' inside the constructor for 'ramesh' holds the same address as &ramesh.
    return 0;
}


ques
What is this pointer?
this pointer is accessible only inside the member functions of a class and points to the object that has called this member function.

When is it necessary to use this pointer?
Suppose we have two local variables with the same name as the data members’ names. Suppose you want to assign the local variable value to the data members. 
In that case, you won’t be able to do until unless you use this pointer because the compiler won’t know that you are referring to the object’s data members unless you use this pointer.
