Constructor Overloading
Constructor overloading can be defined as the concept of having more than one constructor with different parameters so that every constructor 
can perform a different task.As there is a concept of function overloading, similarly constructor overloading is applied when 
we overload a constructor more than a purpose.The declaration is the same as the class name, but there is no return type as
they are constructors.

The criteria to overload a constructor is to differ the number of arguments or the type of arguments.
The corresponding constructor is called depending on the number and type of arguments passed.
If you don't provide a copy constructor, the compiler provides a default copy constructor (also known as implicit copy constructor).
Syntax: ClassName(const ClassName &obj)

#include <iostream>
using namespace std;

class construct
{ 
public:
    float area; 
    // Constructor with no parameters
    construct()
    {
        area = 0;
    }
    // Constructor with two parameters
    construct(int a, int b)
    {
        area = a * b;
    }
    void disp()
    {
        cout<< area<< endl;
    }
};

int main()
{
    // Constructor Overloading 
    // with two different constructors
    // of class name
    construct o;
    construct o2( 10, 20);
    o.disp();
    o2.disp();
    return 1;
}

